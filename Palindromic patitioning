int dp[1001][1001];
 bool isPal(string &str,int i,int j){
       while(i<=j){
           if(str[i]!=str[j])  return false;
           i++;
           j--;
       }
       return true;
   }
int solve(string &str,int i,int j){
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    if(i>=j||isPal(str,i,j)){
        dp[i][j]=0;
        return dp[i][j];
    }
    int mn=INT_MAX;
    for(int k=i;k<=j-1;k++)
    {
        dp[i][j]=1+solve(str,i,k)+solve(str,k+1,j);
        mn=min(dp[i][j],mn);
    }
    return dp[i][j]=mn;
}
    int palindromicPartition(string str)
    {
        // code here
        memset(dp,-1,sizeof(dp));
        return solve(str,0,str.length()-1);
        
    }
