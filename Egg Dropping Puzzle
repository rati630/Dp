int dp[1001][1001];
    int solve(int e,int f){
        if(f==0||f==1)return f;
        if(e==1) return f;
        if(dp[e][f]!=-1)
        return dp[e][f];
        int temp;
        int mn=INT_MAX;
        for(int k=1;k<=f;k++){
            temp=1+max(solve(e-1,k-1),solve(e,f-k));
            mn=min(temp,mn);
        }
        return dp[e][f]=mn;
    }
    //Function to find minimum number of attempts needed in 
    //order to find the critical floor.
    int eggDrop(int e, int f) 
    {
        // your code here
        memset(dp,-1,sizeof(dp));
        return solve(e,f);
    }
